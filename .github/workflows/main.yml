name: Main

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  generate_hash_list:
    name: Generate hash list
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version from tag or default to 0
        id: get_version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          if [[ -z "$version" || "$version" == "$GITHUB_REF" ]]; then
            version="0"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo $version > version

      - name: Run merge.py
        run: python ./scripts/merge.py ${{ steps.get_version.outputs.version }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            hash_list.txt
            version

  update_statistics:
    name: Update Statistics
    needs: generate_hash_list
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/v')"

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install pytablewriter

      - name: Generate Statistics
        run: python ./scripts/generate_stats.py

      - name: Commit STATISTICS.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Update STATISTICS.md'
          file_pattern: 'STATISTICS.md'

  release:
    name: Release
    needs: generate_hash_list
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Package artifacts for release
        run: |
          7z a latest-hashes.7z ./hash_list.txt -m0=lzma2 -mx9

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            latest-hashes.7z
            version

  update_hashsearch:
    name: Update HashSearch's hash list
    needs: generate_hash_list
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Copy hash_list.txt
        uses: appleboy/scp-action@v0.1.4
        env:
          host: ${{ secrets.SSH_HOST }}
          username: $${{ secrets.SSH_USER }}
          key: $${{ secrets.SSH_KEY }}
        with:
          source: "hash_list.txt"
          target: "/etc/hashsearch/"

      - name: Restart HashSearch service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: $${{ secrets.SSH_USER }}
          key: $${{ secrets.SSH_KEY }}
          script: sudo systemctl restart hashsearch

  discord_webhook:
    name: Discord webhook
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        id: get_version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          if [[ -z "$version" || "$version" == "$GITHUB_REF" ]]; then
            version="0"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo $version > version

      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: "Hash List v${{ steps.get_version.outputs.version }} has been released!"